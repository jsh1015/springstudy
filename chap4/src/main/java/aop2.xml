<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans.xsd
             http://www.springframework.org/schema/context
             http://www.springframework.org/schema/context/spring-context.xsd
             http://www.springframework.org/schema/aop
             http://www.springframework.org/schema/aop/spring-aop.xsd">
	<bean id="loggingAdvice" class="xml.LoggingAdvice" />
	<bean id="cacheAdvice" class="xml.ArticleCacheAdvice" />
	<bean id="traceAdvice" class="xml.UpdateMemberInfoTraceAdvice" />
	
	<aop:config>
		<aop:aspect id="traceAspect" ref="traceAdvice" order="1">
			<aop:after-returning method="traceReturn" 
				pointcut="args(id,info)" returning="ret"
				arg-names="ret,id,info" />
				<!-- 
					aspect : AOP로 사용될 객체 설정
					after-returning 실행 후에 traceReturn 클래스를 실행
					pointcut= args(id,info) : 매개변수가 String id, UpdateInfo info일때만 대상
					returning : 결과값을 받기위한 변수명 (ref) / 타입 : "ret,id,info"
				-->
		</aop:aspect>
	</aop:config>
	<aop:config>
		<aop:aspect id="cacheAspect" ref="cacheAdvice" order="2"><!-- order:순서지정 / 시작시는 순서대로 나올때는 반대로-->
			<aop:around method="cache" pointcut="execution(public * *..ReadArticleService.*(..))"/>
		</aop:aspect>
		
		<aop:aspect id="loggingAspect" ref="loggingAdvice" order="3"> 
			<aop:pointcut id="publicMethod" expression="execution(public * xml..*(..))" />
			<aop:before method="before" pointcut-ref="publicMethod"/><!-- xml에있는 모든 public메서드를 실행하기전에 실행 -->
			
																			<!-- 정상종료됐기 때문에 결과값을 받아야함 -->
			<aop:after-returning method="afterReturning" pointcut-ref="publicMethod" returning="ret" /> <!-- 정상종료 -->
			<aop:after-throwing method="afterThrowing" pointcut-ref="publicMethod" throwing="ex" />
			<aop:after method="afterFinally" pointcut-ref="publicMethod" />
		</aop:aspect>
	</aop:config>
</beans>